# Generated by Django 2.0.13 on 2019-05-08 09:58
import json
import os

from django.conf import settings
from django.db import migrations, models


# ToDo manually after the migration:
# Product.objects.filter(organization_uuid='00000000-0000-4000-8000-000000000000').delete()


def forwards_organization_uuid(apps, schema_editor):
    """
    Sets organization_uuids on products.

    After that you should manually remaining Products.

    Prerequisites:
    - Get SiteProfiles into file `siteprofiles.json`:
        python manage.py dumpdata --format=json location.SiteProfile > siteprofiles.json
        kubectl cp ... (from location_service to product_service)
    """
    product_model = apps.get_model('products', 'Product')
    db_alias = schema_editor.connection.alias
    products = product_model.objects.using(db_alias).all()

    siteprofiles_json = os.path.join(settings.BASE_DIR, '..', 'siteprofiles.json')
    try:
        with open(siteprofiles_json) as f:
            siteprofiles = json.load(f)
    except FileNotFoundError:
        print('\n\nsiteprofiles.json not found - '
              'Using for existent products organization_uuid="00000000-0000-4000-8000-000000000000"\n')
        return

    for product in products:
        for sp in siteprofiles:
            if str(product.workflowlevel2_uuid) in sp['fields']['workflowlevel2_uuid']:
                product.organization_uuid = sp['fields']['organization_uuid']
                product.save()


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0020_migrate_type'),
    ]

    operations = [
        migrations.AddField(
            model_name='product',
            name='organization_uuid',
            field=models.UUIDField(db_index=True, blank=True, null=True,
                                   help_text='UUID of the organization that has access to the Product',
                                   verbose_name='Organization UUID'),
            preserve_default=False,
        ),
        migrations.RunPython(forwards_organization_uuid,
                             migrations.RunPython.noop),
        migrations.AlterField(
            model_name='product',
            name='organization_uuid',
            field=models.UUIDField(db_index=True,
                                   blank=False,
                                   null=False,
                                   default='00000000-0000-4000-8000-000000000000',
                                   help_text='UUID of the organization that has access to the Product',
                                   verbose_name='Organization UUID'),
            preserve_default=False,
        ),
    ]
